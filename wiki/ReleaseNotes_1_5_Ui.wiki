#summary User interface improvements in 1.5

= User Interface =

=== Really nice DOM programming! ===
An all-new [http://google-web-toolkit-doc-1-5.googlecode.com/svn/javadoc/1.5/com/google/gwt/dom/client/package-summary.html DOM package] models the W3C HTML Specification for DOM Elements. These new classes allow you to do elegant DOM programming using per-element methods rather than the static DOM helper methods required in GWT 1.4. Best of all, there is no extra memory or speed overhead! The GWT compiler's new support for !JavaScriptObject is designed to allow comppletely cost-free JS interoperation.

Note that `com.google.gwt.dom.client.user.client.Element` now extends `dom.client.Element`. `dom.client.Element` is the preferred class to use for new code, and `user.client.Element` exists only for backwards compatibility. `UIObject` now generally uses the `dom.client.Element` instead of `user.client.Element`, although `setElement(user.client.Element)` and `getStyleElement()` have been preserved for backwards compatibility.

=== New sample: Showcase ===
The new Showcase example replaces the KitchenSink as the all-inclusive demo of GWT widgets and features. Examples of almost all Widgets can be found in the Showcase, along with source code and style definitions that will allow users to copy the examples easily.  The Showcase illustrates locale support (including arabic, and RTL language), animations, and all of the new style themes.

=== Default visual themes ===
GWT now contains three optional visual themes that give widgets a pleasant default look and feel: Standard, Chrome, and Dark. The Standard theme uses subtle shades of blue paired with rounded corners, to give a simple, clean appearance that works well for many apps. The Chrome theme is similar to Standard but includes gray-scale gradients to give emphasize a minimalist visual style. The Dark theme uses dark colors and hard edges for a bold, unusual appearance. The Standard theme is used by default in GWT applications created with `applicationCreator`, but users can select a different theme by inheriting an alternative theme module in their module XML.

Please note that, while these themes may serve as a useful starting point, they do not limit you in any way. You don't need to use them at all if you don't want to, and most applications will need to make significant additions or changes to the CSS introduced by these themes. The new Showcase sample lets you interactively explore the CSS styles associated with various widgets so that you can develop an intuition about how to use CSS to create exactly the style you want.

=== Widget animations ===
Several widgets have optional animations to enhance user feedback: Tree, TabPanel, DisclosurePanel, PopupPanel, and MenuBar. You can enable an animation on any Widget that supports animations by called `someWidget.setAnimationEnabled(true)`.

=== Standards mode support ===
GWT now supports HTML "standards mode" in addition to each browser's traditional "quirks mode". As of 1.5, `applicationCreator` generates HTML that uses standards mode. Note that in future GWT releases, support for quirks mode will be de-prioritized; new features and bugs will focus on perfecting standards mode behavior. When practical, you should switch your HTML to standards mode by including a tag like this at the top of your html file:
{{{
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
}}}